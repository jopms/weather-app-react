{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Documents\\\\xgeeks\\\\fe-assignment-jo.34.ao\\\\src\\\\components\\\\ForecastWeather\\\\ForecastWeatherCard.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForecastWeatherCard = ({\n  data,\n  offSet\n}) => {\n  var _data$temp, _data$temp2;\n\n  const getTimeAndDate = dayDiference => {\n    const date = new Date() + dayDiference;\n    const forecastDate = new Date();\n    const day = date.toString().split(\" \")[2];\n    const month = date.toString().split(\" \")[1];\n    const year = date.getUTCFullYear().toString().slice(2, 4);\n    const time = date.toTimeString().slice(0, 5) + \"H\";\n    const weekday = date.toLocaleString(\"en-us\", {\n      weekday: \"long\"\n    }).slice(0, 3);\n    return `${time} - ${weekday}, ${day} ${month} '${year}`;\n  };\n\n  console.log(getTimeAndDate(offSet));\n\n  const handleClick = e => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-card\",\n    onClick: e => handleClick(e),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-icon-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-text\",\n        children: data.weather[0].main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-max-min\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-temp\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"M\\xE1x.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [Math.round(((_data$temp = data.temp) === null || _data$temp === void 0 ? void 0 : _data$temp.max) - 273.15), \"\\xBA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-temp\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Min.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [Math.round(((_data$temp2 = data.temp) === null || _data$temp2 === void 0 ? void 0 : _data$temp2.min) - 273.15), \"\\xBA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ForecastWeatherCard;\nexport default ForecastWeatherCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastWeatherCard\");","map":{"version":3,"sources":["C:/Users/ACER/Documents/xgeeks/fe-assignment-jo.34.ao/src/components/ForecastWeather/ForecastWeatherCard.js"],"names":["React","ForecastWeatherCard","data","offSet","getTimeAndDate","dayDiference","date","Date","forecastDate","day","toString","split","month","year","getUTCFullYear","slice","time","toTimeString","weekday","toLocaleString","console","log","handleClick","e","weather","main","Math","round","temp","max","min"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AAAA;;AAE9C,QAAMC,cAAc,GAAIC,YAAD,IAAkB;AACrC,UAAMC,IAAI,GAAI,IAAIC,IAAJ,EAAD,GAAaF,YAA1B;AACA,UAAMG,YAAY,GAAG,IAAID,IAAJ,EAArB;AACA,UAAME,GAAG,GAAGH,IAAI,CAACI,QAAL,GAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAZ;AACA,UAAMC,KAAK,GAAGN,IAAI,CAACI,QAAL,GAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAd;AACA,UAAME,IAAI,GAAGP,IAAI,CAACQ,cAAL,GAAsBJ,QAAtB,GAAiCK,KAAjC,CAAuC,CAAvC,EAA0C,CAA1C,CAAb;AACA,UAAMC,IAAI,GAAGV,IAAI,CAACW,YAAL,GAAoBF,KAApB,CAA0B,CAA1B,EAA6B,CAA7B,IAAkC,GAA/C;AACA,UAAMG,OAAO,GAAGZ,IAAI,CACjBa,cADa,CACE,OADF,EACW;AAAED,MAAAA,OAAO,EAAE;AAAX,KADX,EAEbH,KAFa,CAEP,CAFO,EAEJ,CAFI,CAAhB;AAGA,WAAQ,GAAEC,IAAK,MAAKE,OAAQ,KAAIT,GAAI,IAAGG,KAAM,KAAIC,IAAK,EAAtD;AACH,GAXD;;AAaJO,EAAAA,OAAO,CAACC,GAAR,CAAYjB,cAAc,CAACD,MAAD,CAA1B;;AAEE,QAAMmB,WAAW,GAAIC,CAAD,IAAO,CAAE,CAA7B;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAGA,CAAD,IAAOD,WAAW,CAACC,CAAD,CAA1D;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAAgCrB,IAAI,CAACsB,OAAL,CAAa,CAAb,EAAgBC;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qBAAOC,IAAI,CAACC,KAAL,CAAW,eAAAzB,IAAI,CAAC0B,IAAL,0DAAWC,GAAX,IAAiB,MAA5B,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qBAAOH,IAAI,CAACC,KAAL,CAAW,gBAAAzB,IAAI,CAAC0B,IAAL,4DAAWE,GAAX,IAAiB,MAA5B,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CArCD;;KAAM7B,mB;AAuCN,eAAeA,mBAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst ForecastWeatherCard = ({ data, offSet }) => {\r\n    \r\n    const getTimeAndDate = (dayDiference) => {\r\n        const date = (new Date())+dayDiference;\r\n        const forecastDate = new Date()\r\n        const day = date.toString().split(\" \")[2];\r\n        const month = date.toString().split(\" \")[1];\r\n        const year = date.getUTCFullYear().toString().slice(2, 4);\r\n        const time = date.toTimeString().slice(0, 5) + \"H\";\r\n        const weekday = date\r\n          .toLocaleString(\"en-us\", { weekday: \"long\" })\r\n          .slice(0, 3);\r\n        return `${time} - ${weekday}, ${day} ${month} '${year}`;\r\n    };\r\n\r\nconsole.log(getTimeAndDate(offSet))\r\n\r\n  const handleClick = (e) => {};\r\n  return (\r\n    <div className=\"forecast-card\" onClick={(e) => handleClick(e)}>\r\n      <div></div>\r\n      <div className=\"forecast-icon-text\">\r\n        <div className=\"forecast-icon\"></div>\r\n        <div className=\"forecast-text\">{data.weather[0].main}</div>\r\n      </div>\r\n      <div className=\"forecast-max-min\">\r\n        <div className=\"forecast-temp\">\r\n          <span>Máx.</span>\r\n          <span>{Math.round(data.temp?.max - 273.15)}º</span>\r\n        </div>\r\n        <div className=\"forecast-temp\">\r\n          <span>Min.</span>\r\n          <span>{Math.round(data.temp?.min - 273.15)}º</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastWeatherCard;\r\n"]},"metadata":{},"sourceType":"module"}